/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.30
 * Generated at: 2024-10-08 06:29:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import modelo.Empleado;
import modelo.Puesto;
import javax.swing.table.DefaultTableModel;
import java.util.HashMap;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(6);
    _jspx_imports_classes.add("modelo.Empleado");
    _jspx_imports_classes.add("modelo.Puesto");
    _jspx_imports_classes.add("javax.swing.table.DefaultTableModel");
    _jspx_imports_classes.add("java.util.HashMap");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"es\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <title>Gestión de Empleados</title>\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/canvas-confetti@1.5.1/dist/confetti.browser.min.js\"></script>\n");
      out.write("    <style>\n");
      out.write("        body {\n");
      out.write("            background-color: #f8f9fa;\n");
      out.write("        }\n");
      out.write("        h1 {\n");
      out.write("            margin-bottom: 30px;\n");
      out.write("            color: #343a40;\n");
      out.write("        }\n");
      out.write("        .modal-header {\n");
      out.write("            background-color: #007bff;\n");
      out.write("            color: white;\n");
      out.write("        }\n");
      out.write("        .table {\n");
      out.write("            margin-top: 20px;\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <div class=\"container mt-5\">\n");
      out.write("        <h1 class=\"text-center\">Formulario de Empleados</h1>\n");
      out.write("        <div class=\"text-center mb-4\">\n");
      out.write("            <button type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#modal_empleado\" onclick=\"limpiar()\">\n");
      out.write("                Agregar Nuevo Empleado\n");
      out.write("            </button>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <div class=\"modal fade\" id=\"modal_empleado\" tabindex=\"-1\" aria-labelledby=\"modal_empleado\" aria-hidden=\"true\">\n");
      out.write("            <div class=\"modal-dialog\">\n");
      out.write("                <div class=\"modal-content\">\n");
      out.write("                    <div class=\"modal-header\">\n");
      out.write("                        <h5 class=\"modal-title\">Detalles del Empleado</h5>\n");
      out.write("                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"modal-body\">\n");
      out.write("                        <form action=\"sr_empleado\" method=\"post\" class=\"form-group p-4 bg-light border rounded shadow-sm\" style=\"transition: all 0.3s;\">\n");
      out.write("                            <h3 class=\"text-center text-success mb-4\">Formulario de Empleados</h3>\n");
      out.write("                            <div class=\"mb-3\">\n");
      out.write("                                <label for=\"txt_id\" class=\"form-label\"><b>ID</b></label>\n");
      out.write("                                <input type=\"text\" name=\"txt_id\" id=\"txt_id\" class=\"form-control\" value=\"0\" readonly>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"mb-3\">\n");
      out.write("                                <label for=\"txt_codigo\" class=\"form-label\"><b>Código:</b></label>\n");
      out.write("                                <input type=\"text\" name=\"txt_codigo\" id=\"txt_codigo\" class=\"form-control\" placeholder=\"Ejemplo: E001\" required>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"mb-3\">\n");
      out.write("                                <label for=\"txt_nombres\" class=\"form-label\"><b>Nombres:</b></label>\n");
      out.write("                                <input type=\"text\" name=\"txt_nombres\" id=\"txt_nombres\" class=\"form-control\" placeholder=\"Ejemplo: Nombre 1, Nombre 2\" required>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"mb-3\">\n");
      out.write("                                <label for=\"txt_apellidos\" class=\"form-label\"><b>Apellidos:</b></label>\n");
      out.write("                                <input type=\"text\" name=\"txt_apellidos\" id=\"txt_apellidos\" class=\"form-control\" placeholder=\"Ejemplo: Apellido 1, Apellido 2\" required>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"mb-3\">\n");
      out.write("                                <label for=\"txt_direccion\" class=\"form-label\"><b>Dirección:</b></label>\n");
      out.write("                                <input type=\"text\" name=\"txt_direccion\" id=\"txt_direccion\" class=\"form-control\" placeholder=\"Ejemplo: No. casa, calle, zona, ciudad\" required>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"mb-3\">\n");
      out.write("                                <label for=\"txt_telefono\" class=\"form-label\"><b>Teléfono:</b></label>\n");
      out.write("                                <input type=\"number\" name=\"txt_telefono\" id=\"txt_telefono\" class=\"form-control\" placeholder=\"Ejemplo: 55487941\" required>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"mb-3\">\n");
      out.write("                                <label for=\"txt_fn\" class=\"form-label\"><b>Fecha Nacimiento:</b></label>\n");
      out.write("                                <input type=\"date\" name=\"txt_fn\" id=\"txt_fn\" class=\"form-control\" required>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"mb-3\">\n");
      out.write("                                <label for=\"drop_puesto\" class=\"form-label\"><b>Puesto:</b></label>\n");
      out.write("                                <select name=\"drop_puesto\" id=\"drop_puesto\" class=\"form-select\">\n");
      out.write("                                    ");

                                        Puesto puesto = new Puesto();
                                        HashMap<String,String> drop = puesto.drop_sangre();
                                        for (String i: drop.keySet()){
                                            out.println("<option value='"+i+"'>"+drop.get(i)+"</option>");
                                        }
                                    
      out.write("    \n");
      out.write("                                </select>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"mt-4 d-flex justify-content-between\">\n");
      out.write("                                <button name=\"btn_agregar\" id=\"btn_agregar\" value=\"agregar\" class=\"btn btn-success w-30\" style=\"transition: background-color 0.3s;\" onclick=\"celebrar()\">Agregar</button>\n");
      out.write("                                <button name=\"btn_modificar\" id=\"btn_modificar\" value=\"modificar\" class=\"btn btn-warning w-30\" style=\"transition: background-color 0.3s;\">Modificar</button>\n");
      out.write("                                <button name=\"btn_eliminar\" id=\"btn_eliminar\" value=\"eliminar\" class=\"btn btn-danger w-30\" onclick=\"javascript:if(!confirm('¿Desea Eliminar?'))return false\" style=\"transition: background-color 0.3s;\">Eliminar</button>\n");
      out.write("                                <button type=\"button\" class=\"btn btn-secondary w-30\" data-bs-dismiss=\"modal\">Cerrar</button>\n");
      out.write("                            </div>\n");
      out.write("                        </form>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <table class=\"table table-striped table-bordered table-hover\">\n");
      out.write("            <thead class=\"table-dark\">\n");
      out.write("                <tr>\n");
      out.write("                    <th>Código</th>\n");
      out.write("                    <th>Nombres</th>\n");
      out.write("                    <th>Apellidos</th>\n");
      out.write("                    <th>Dirección</th>\n");
      out.write("                    <th>Teléfono</th>\n");
      out.write("                    <th>Nacimiento</th>\n");
      out.write("                    <th>Puesto</th>\n");
      out.write("                </tr>\n");
      out.write("            </thead>\n");
      out.write("            <tbody id=\"tbl_empleados\">\n");
      out.write("                ");

                    Empleado empleado = new Empleado();
                    DefaultTableModel tabla = empleado.leer();
                    for (int t = 0; t < tabla.getRowCount(); t++){
                        out.println("<tr data-id='" + tabla.getValueAt(t, 0) + "' data-id_p='" + tabla.getValueAt(t, 8) + "'>");
                        out.println("<td>" + tabla.getValueAt(t, 1) + "</td>");
                        out.println("<td>" + tabla.getValueAt(t, 2) + "</td>");
                        out.println("<td>" + tabla.getValueAt(t, 3) + "</td>");
                        out.println("<td>" + tabla.getValueAt(t, 4) + "</td>");
                        out.println("<td>" + tabla.getValueAt(t, 5) + "</td>");
                        out.println("<td>" + tabla.getValueAt(t, 6) + "</td>");
                        out.println("<td>" + tabla.getValueAt(t, 7) + "</td>");
                        out.println("</tr>");
                    }
                
      out.write("\n");
      out.write("            </tbody>\n");
      out.write("        </table>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\" integrity=\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\" crossorigin=\"anonymous\"></script>\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js\" integrity=\"sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r\" crossorigin=\"anonymous\"></script>\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js\" integrity=\"sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLw\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
